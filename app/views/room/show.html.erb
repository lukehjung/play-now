<div class="section">
  <h1 id="room-name"><%= @room.name %></h1>

  <div class="controller-container">
    <div>
      <h2>Action Cable Implementation</h2>
      <%= form_for @room do |f| %>
        Video ID: <%= f.text_field :videoId, class: "input is-primary is-small video-url" %>
      <% end %>

      <%= link_to '⏹️', "#{@room.name}/stop", method: :patch, class: "video-control" %>
      <%= link_to '▶️', "#{@room.name}/play", method: :patch, class: "video-control" %>
      <%= link_to '⏸️', "#{@room.name}/pause", method: :patch, class: "video-control" %>

      <%= form_for @room, url: "#{@room.name}/seek" do |f| %>
        Jump to: <%= f.text_field :seconds, class: "input is-primary is-small video-seek" %>
      <% end %>
    </div>
    <div>
      <h2>HTTP Implementation</h2>
      <%= form_for @room, url: "#{@room.name}/video" do |f| %>
        Video ID: <%= f.text_field :videoId, class: "input is-primary is-small video-url" %>
      <% end %>

      <%= link_to '⏹️', "#{@room.name}/stop", method: :post, class: "video-control" %>
      <%= link_to '▶️', "#{@room.name}/play", method: :post, class: "video-control" %>
      <%= link_to '⏸️', "#{@room.name}/pause", method: :post, class: "video-control" %>

      <%= form_for @room, url: "#{@room.name}/seekvideo" do |f| %>
        Jump to: <%= f.text_field :seconds, class: "input is-primary is-small video-seek" %>
      <% end %>
    </div>
  </div>

  <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
  <div id="player"></div>
</div>

<script>
    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var videoUrl = "<%= @room.videoId %>";
    var rx = /^.*(?:(?:youtu\.be\/|v\/|vi\/|u\/\w\/|embed\/)|(?:(?:watch)?\?v(?:i)?=|\&v(?:i)?=))([^#\&\?]*).*/;
    var videoId = videoUrl.match(rx)[1];
    console.log(videoId)
    var player;
    function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
        height: '390',
        width: '640',
        videoId: videoId,
        events: {
        'onReady': onPlayerReady,
        }
    });
    }

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
      // event.target.playVideo();
      console.log('pre-forward')
    }

    // 5. The API calls this function when the player's state changes.
    //    The function indicates that when playing a video (state=1),
    //    the player should play for six seconds and then stop.

//   function stopVideo() {
//     player.stopVideo();
//   }

    document.body.player = player;
    console.log(player)
</script>

<% content_for :javascript do %>
  <%= javascript_include_tag 'playerPoll.js' %>
<% end %>