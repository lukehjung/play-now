<h1>hi</h1>
<h1><%= @room.name %></h1>
<div id="room-number"><%= @room.number %></div>
<%= link_to 'Stop Video', remote: true %>
<%= link_to 'Play Video', remote: true %>

<%# <%= link_to "Label", :controller => :room_controller, :action => :forward %>

<%= form_for @room do |f| %>
  Video ID: <%= f.text_field :videoId %>
<% end %>

<!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
<div id="player"></div>

<script>
    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var videoUrl = "<%= @room.videoId %>";
    var rx = /^.*(?:(?:youtu\.be\/|v\/|vi\/|u\/\w\/|embed\/)|(?:(?:watch)?\?v(?:i)?=|\&v(?:i)?=))([^#\&\?]*).*/;
    var videoId = videoUrl.match(rx)[1];
    console.log(videoId)
    var player;
    function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
        height: '390',
        width: '640',
        videoId: videoId,
        events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
        }
    });
    }

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
      // event.target.playVideo();
      console.log('pre-forward')
    }

    // 5. The API calls this function when the player's state changes.
    //    The function indicates that when playing a video (state=1),
    //    the player should play for six seconds and then stop.

    function onPlayerStateChange(event) {
      <%= @room.update_attribute(:state, !@room.state) %>
      if (event.data == YT.PlayerState.PLAYING) {
        // <% forward %>
        console.log('forwarded');
        // player.stopVideo();
      }
    }
//   function stopVideo() {
//     player.stopVideo();
//   }

    document.body.player = player;
    console.log(player)
</script>
